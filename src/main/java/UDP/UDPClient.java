package UDP;//import java.net.*;
import java.io.*;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.util.Scanner;

public class UDPClient {//???????? ?????? ???????
    //start server first
    public void runClient() throws IOException {//????? ??????? runClient
        DatagramSocket s = null;//???????? ???????????
        try {
            byte[] buf = new byte[512]; //????? ??? ??????/???????? ???????????
            s = new DatagramSocket();//???????? ?????? ? ????????? ??????
            System.out.println("UDP.UDPClient: Started");
            byte[] verCmd = {'V', 'E', 'R', 'S'};
            DatagramPacket sendPacket = new DatagramPacket(verCmd, verCmd.length, InetAddress.getByName("127.0.0.1"), 8001);//???????? ??????????? ??? ??????? ??????
            s.send(sendPacket);//??????? ???????????
            DatagramPacket recvPacket = new DatagramPacket(buf, buf.length);//???????? ??????????? ??? ????????? ??????
            s.receive(recvPacket);//????????? ???????????
            String version = new String(recvPacket.getData()).trim();//?????????? ?????? (?????? ???????)
            System.out.println("UDP.UDPClient: TCP.Server Version: " + version);

            byte[] evalCmd = {'E', 'V', 'A', 'L'};
            Scanner scanner;
            do {

                scanner = new Scanner(System.in);
                int x = 0;
                int y = 0;
                int z = 0;

                System.out.println("Input data...");
                System.out.println("x = ");
                x = scanner.nextInt();
                System.out.println("y = ");
                y = scanner.nextInt();
                System.out.println("z = ");
                z = scanner.nextInt();

                byte[] packet = new byte[512];

                System.arraycopy(evalCmd, 0, packet, 0, 4);

                System.arraycopy(Integer.toString(x).getBytes(), 0, packet, 4, Integer.toString(x).getBytes().length);

                System.arraycopy(Integer.toString(y).getBytes(), 0, packet, 14, Integer.toString(y).getBytes().length);

                System.arraycopy(Integer.toString(z).getBytes(), 0, packet, 24, Integer.toString(z).getBytes().length);

                sendPacket.setData(packet);
                sendPacket.setLength(packet.length);

                s.send(sendPacket);

                DatagramPacket recvPacket2 = new DatagramPacket(buf, buf.length);
                s.receive(recvPacket2);
                System.out.println("sigma = " + new String(recvPacket.getData()).trim());

                System.out.println("Continue? (y or n)");

            } while ("y".equals(scanner.next()));


            byte[] quitCmd = {'Q', 'U', 'I', 'T'};
            sendPacket.setData(quitCmd);//?????????? ?????? ?????????? ??????
            sendPacket.setLength(quitCmd.length);//?????????? ????? ?????????? ??????
            s.send(sendPacket); //??????? ?????? ???????
            System.out.println("UDP.UDPClient: Ended");
        } finally {
            if (s != null) {
                s.close();//???????? ?????? ???????
            }
        }
    }

    public static void main(String[] args) {//????? main
        try {
            UDPClient client = new UDPClient();//???????? ??????? client
            client.runClient();//????? ?????? ??????? client
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
}
